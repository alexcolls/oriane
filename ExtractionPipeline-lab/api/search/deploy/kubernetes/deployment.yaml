# =============================================================================
# Kubernetes Deployment for Search API with GPU Support
# =============================================================================
# This manifest deploys the FastAPI search service to Kubernetes with:
# - GPU node scheduling
# - Horizontal Pod Autoscaler support
# - Resource limits and requests
# - Health checks and readiness probes
# - ConfigMap and Secret mounting
# =============================================================================

apiVersion: apps/v1
kind: Deployment
metadata:
  name: search-api
  namespace: search
  labels:
    app: search-api
    version: v1.0.0
    component: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: search-api
  template:
    metadata:
      labels:
        app: search-api
        version: v1.0.0
        component: api
    spec:
      # Node selector for GPU nodes
      nodeSelector:
        accelerator: nvidia-tesla-v100  # Adjust based on your GPU type
      
      # Tolerations for GPU nodes
      tolerations:
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule
      
      # Service account for pod security
      serviceAccountName: search-api-sa
      
      # Security context
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      
      containers:
      - name: search-api
        image: your-registry/search-api:latest
        imagePullPolicy: IfNotPresent
        
        # Resource requirements
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
            nvidia.com/gpu: 1
          limits:
            memory: "8Gi"
            cpu: "4000m"
            nvidia.com/gpu: 1
        
        # Environment variables
        env:
        - name: API_HOST
          value: "0.0.0.0"
        - name: API_PORT
          value: "8000"
        - name: LOG_LEVEL
          value: "info"
        - name: NVIDIA_VISIBLE_DEVICES
          value: "all"
        - name: NVIDIA_DRIVER_CAPABILITIES
          value: "compute,utility"
        
        # Environment from ConfigMap
        envFrom:
        - configMapRef:
            name: search-api-config
        - secretRef:
            name: search-api-secrets
        
        # Ports
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        
        # Health checks
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
          successThreshold: 1
        
        # Volume mounts
        volumeMounts:
        - name: app-config
          mountPath: /app/config
          readOnly: true
        - name: shared-storage
          mountPath: /app/shared
        - name: tmp-storage
          mountPath: /tmp
        
        # Startup probe for slow-starting containers
        startupProbe:
          httpGet:
            path: /health
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
          successThreshold: 1
      
      # Volumes
      volumes:
      - name: app-config
        configMap:
          name: search-api-config
      - name: shared-storage
        persistentVolumeClaim:
          claimName: search-shared-pvc
      - name: tmp-storage
        emptyDir:
          sizeLimit: 1Gi
      
      # Image pull secrets
      imagePullSecrets:
      - name: registry-secret
      
      # Restart policy
      restartPolicy: Always
      
      # Termination grace period
      terminationGracePeriodSeconds: 30

---
# =============================================================================
# Service Account for Search API
# =============================================================================
apiVersion: v1
kind: ServiceAccount
metadata:
  name: search-api-sa
  namespace: search
  labels:
    app: search-api

---
# =============================================================================
# ClusterRole for Search API
# =============================================================================
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: search-api-role
rules:
- apiGroups: [""]
  resources: ["pods", "services", "configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch"]

---
# =============================================================================
# ClusterRoleBinding for Search API
# =============================================================================
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: search-api-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: search-api-role
subjects:
- kind: ServiceAccount
  name: search-api-sa
  namespace: search
